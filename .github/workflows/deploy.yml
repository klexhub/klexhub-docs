name: Deploy

on:
  push:
    branches:
      - production

jobs:
  changes:
    name: "Check for docs changes"
    runs-on: ubuntu-latest
    outputs:
      developers-site: ${{ steps.filter.outputs.developers-site }}
      klexhealth: ${{ steps.filter.outputs.klexhealth }}
      supportpp: ${{ steps.filter.outputs.supportpp }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.4.2
        id: filter
        with:
          filters: |
            developers-site:
              - 'developers.klexhub.com/**'
            klexhealth:
              - 'products/klexhealth/**'
            supportpp:
              - 'products/supportpp/**'
  deploy-developers-site:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.developers-site == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: "developers.klexhub.com"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          npm run build
        env:
          WORKERS_ENV: development
      - name: Publish staging
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "developers.klexhub.com"
          wranglerVersion: "1.13.0"
      - name: Publish production
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "developers.klexhub.com"
          environment: "production"
          wranglerVersion: "1.13.0"

  deploy-klexhealth:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.klexhealth == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/klexhealth
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build
        env:
          WORKERS_ENV: development
      - name: Publish staging
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/klexhealth"
      - name: Publish production
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/klexhealth"
          environment: "production"
  deploy-supportpp:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.supportpp == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/supportpp
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build
        env:
          WORKERS_ENV: development
      - name: Publish staging
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/supportpp"
      - name: Publish production
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/supportpp"
          environment: "production"
  update-search-indexes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: docker-practice/actions-setup-docker@master
      - run: sudo apt-get install jq
      - run: docker run -e APPLICATION_ID=X3RSCL21SF -e API_KEY=${{ secrets.SEARCH_API_KEY }} -e "CONFIG=$(cat ./config.json | jq -r tostring)" algolia/docsearch-scraper

